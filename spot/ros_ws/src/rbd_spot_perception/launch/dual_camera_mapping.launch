<launch>
  <!-- This launch file starts the rtabmap system. -->
  <!-- This follows the "Kinect + Odometry + Fake 2D laser from Kinect" tutorial -->
  <!-- with various refactoring. -->
  <!-- Note: you MUST set environment variable MAP_NAME when running this launch file. -->
  <!-- That is, do 'MAP_NAME=<map_name> roslaunch <this_file>' -->
  <arg name="camera0" default="frontleft"/>
  <arg name="camera1" default="frontright"/>
  <arg name="map_name" default="$(env MAP_NAME)"/>
  <arg name="overwrite_existing" default="false"/>
  <arg name="database_path" default="$(find rbd_spot_perception)/maps/$(arg map_name)_rtabmap.db"/>

  <!-- This node saves the map name to be accessible by the map saver -->
  <node pkg="rbd_spot_perception" type="save_map_name.py" name="save_map_name" args="$(find rbd_spot_perception)/maps"/>

  <group ns="rtabmap">

    <!-- spot depth cloud to laser scan (this is necessary to create grid map) -->
    <include file="$(find rbd_spot_perception)/launch/include/fake_scan_from_depth.launch">
      <arg name="camera" value="$(arg camera0)"/>
    </include>

    <include file="$(find rbd_spot_perception)/launch/include/fake_scan_from_depth.launch">
      <arg name="camera" value="$(arg camera1)"/>
    </include>

    <!-- RGBD synchronization -->
    <node pkg="nodelet" type="nodelet" name="rgbd_sync0" args="standalone rtabmap_ros/rgbd_sync" output="screen">
      <remap from="rgb/image"        to="/spot/stream_image/$(arg camera0)_fisheye_image/image"/>
      <remap from="depth/image"      to="/spot/stream_image/$(arg camera0)_depth_in_visual_frame/image"/>
      <remap from="rgb/camera_info"  to="/spot/stream_image/$(arg camera0)_fisheye_image/camera_info"/>
      <remap from="rgbd_image"       to="$(arg camera0)_rgbd_image"/> <!-- output -->
      <param name="approx_sync"       value="true"/>
    </node>

    <node pkg="nodelet" type="nodelet" name="rgbd_sync1" args="standalone rtabmap_ros/rgbd_sync" output="screen">
      <remap from="rgb/image"        to="/spot/stream_image/$(arg camera1)_fisheye_image/image"/>
      <remap from="depth/image"      to="/spot/stream_image/$(arg camera1)_depth_in_visual_frame/image"/>
      <remap from="rgb/camera_info"  to="/spot/stream_image/$(arg camera1)_fisheye_image/camera_info"/>
      <remap from="rgbd_image"       to="$(arg camera1)_rgbd_image"/> <!-- output -->
      <param name="approx_sync"       value="true"/>
    </node>

    <!-- rtabmap main node -->
    <arg name="rtabmap_args" value="--delete_db_on_start" if="$(arg overwrite_existing)"/>
    <arg name="rtabmap_args" value="" unless="$(arg overwrite_existing)"/>
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_args)"
          unless="$(eval arg('map_name') == '')">  <!-- run only if map_name is not empty -->
      <param name="frame_id" type="string" value="body" />
      <param name="subscribe_depth" type="bool" value="false"/>
      <param name="subscribe_rgbd"  type="bool" value="true"/>
      <param name="subscribe_scan"  type="bool" value="false"/>

      <remap from="odom"         to="/spot/odometry"/>
      <remap from="scan"         to="/spot_scan"/>
      <param name="queue_size" type="int" value="10"/>

      <param name="rgbd_cameras"  type="int"    value="2"/>
      <remap from="rgbd_image0"   to="$(arg camera0)_rgbd_image"/>
      <remap from="rgbd_image1"   to="$(arg camera1)_rgbd_image"/>

      <param name="database_path" type="string" value="$(arg database_path)"/>

      <!-- RTAB-Map's parameters -->
      <param name="RGBD/ProximityBySpace"     type="string" value="false"/>
      <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
      <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
      <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
      <param name="Reg/Force3DoF"             type="string" value="true"/>
      <param name="Vis/MinInliers"            type="string" value="12"/>
      <param name="Vis/MinInliers"            type="string" value="12"/>
      <param name="Grid/CellSize"             type="string" value="0.02"/>
    </node>

  </group>
</launch>
