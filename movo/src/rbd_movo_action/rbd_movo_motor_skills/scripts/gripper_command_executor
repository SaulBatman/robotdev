#!/usr/bin/env python

import sys
import yaml

import tf2_ros
import rospy
import numpy as np

from geometry_msgs.msg import PoseStamped
from rbd_movo_motor_skills.motion_planning.framework import Verifier
from rbd_movo_motor_skills.utils.ros_utils import *

class GripperCommandGoalVerifier(Verifier):
    """
    Gripper state verifier. Although the gripper states
    are published under /movo/left_gripper/joint_states,
    the values in the "position" field of those messages
    do not match the value of "position" in the command,
    sent to the Gripper Action Server. Therefore, it is
    quite challenging to tell whether a gripper goal
    state is reached.

    Experimentally, I have observed:
    - When the gripper is fully open, the joint_state
      position reading is 0.002549 for finger1, 0.0016998
      for fingers 2 and 3.

    - When fully closed, the value is about 0.890716
      for all fingers.

    - When half open, the value is about 0.515
      for all fingers.

    It is a little tricky to check for these values. Instead,
    the Action Server publishes feedback to the Action Client,
    at '/movo/left_gripper_controller/gripper_cmd/feedback'
    If the goal is successful, then the last feedback
    will have a 'reached_goal' field to be True.

    This Verifier just needs to verify that!

    Therefore, this Verifier does not care about the
    configuration in the cue - that is for the executor.
    It only cares about whether the Action Goal is reached.
    """
    def __init__(self, name, cue, rate=10):
        super(ARTagPoseVerifier, self).__init__(name, cue, rate=rate)
